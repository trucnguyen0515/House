{"version":3,"file":"static/webpack/static/development/pages/products.js.c7f6c26292edefe7a7cf.hot-update.js","sources":["webpack:///./src/layouts/layout1Comp/MegaMenu.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPhotoVideo, faShoppingBasket, faUserAstronaut, faBookReader, faGift } from '@fortawesome/free-solid-svg-icons'\nimport Link from \"next/link\";\nimport React, { Component, Fragment } from 'react';\nimport MyRouter from '../../const/routes';\n\n\nconst data = {\n    1: [\n        {\n            title: 'kitchen & dining',\n            data: ['kitchen', 'dining room', 'pantry', 'great room']\n        },\n        {\n            title: 'bed & bath',\n            data: ['bath room', 'powder room', 'bedroom', 'baby & kids']\n        },\n        {\n            title: 'living',\n            data: ['living room', 'family room', 'sunroom', 'home theater']\n        },\n        {\n            title: 'outdoor',\n            data: ['landscape', 'Patio', 'Deck', 'Pool']\n        },\n        {\n            title: 'more room',\n            data: ['exterior', 'entry', 'hall', 'home office']\n        },\n    ],\n}\n\n// stt la so thu tu cua div \nconst alignDivMenu = (div, stt) => {\n    $(div).find(\".menu\").css({ 'display': 'block' })\n    if (stt >= 1 && stt <= 3) {\n        let px;\n        px = stt === 1 ? '-1px' : stt === 2 ? '-140px' : stt === 3 ? '-400px' : '0'\n        $(div).find(\".menu\").css({\n            left: px\n        })\n    }\n    if (stt > 3 && stt <= 5) {\n        let px;\n        px = stt === 5 ? '-1px' : '-120px'\n        $(div).find(\".menu\").css({\n            right: px\n        })\n    }\n}\nconst HoverMenu = () => {\n    $(\"#MegaMenu .item\").hover(function () {\n\n        $(this).addClass(\"hoverMenu\")\n        // get stt\n        let stt = $(this).attr(\"class\").split(\" \")[1];\n        stt = parseInt(stt[stt.length - 1]);\n        // line transparent\n        $(this).append(`\n            <div class=\"line\"></div>\n        `)\n        //css\n        alignDivMenu(this, stt);\n        // debugger\n    }, function () {\n        $(\"#MegaMenu .line\").remove();\n        $(this).removeClass(\"hoverMenu\");\n        $(this).find(\".menu\").css({ 'display': 'none' })\n    })\n}\n\nexport default class MegaMenu extends Component {\n\n    componentDidMount() {\n        HoverMenu();\n    }\n\n    render() {\n        return (\n            <div id=\"MegaMenu\">\n                <div className=\"parent container\">\n                    <div className=\"item item1\">\n                        <FontAwesomeIcon icon={faPhotoVideo} />\n                        <span className=\"nameMenu\">photos</span>\n                        <div className=\"menu\">\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    data[1].map((res, j) => {\n                                        return (\n                                            <div key={j} className=\"itemMenu\">\n                                                <h4 className=\"title mb-10\">{res.title}</h4>\n                                                <ul style={{ marginBottom: 0, listStyleType: 'none' }}>\n                                                    {\n                                                        res.data.map((res2, i) => {\n                                                            return <p key={i} className=\"m-0 mylink\"><Link href=\"/aa\"><small className=\"\">{res2}</small></Link></p>\n                                                        })\n                                                    }\n                                                </ul>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"item item2\">\n                        <Link href={MyRouter.Products.href}>\n                            <Fragment>\n                                <FontAwesomeIcon icon={faShoppingBasket} />\n                                <span className=\"nameMenu\">shop by department</span>\n                                <div className=\"menu\">\n                                    <div style={{ display: 'flex' }}>\n                                        {\n                                            data[1].map((res, j) => {\n                                                return (\n                                                    <div key={j} className=\"itemMenu\">\n                                                        <h4 className=\"title mb-10\">{res.title}</h4>\n                                                        <ul style={{ marginBottom: 0, listStyleType: 'none' }}>\n                                                            {\n                                                                res.data.map((res2, i) => {\n                                                                    return <p key={i} className=\"m-0\"><Link href=\"/aa\"><small className=\"mylink\">{res2}</small></Link></p>\n                                                                })\n                                                            }\n                                                        </ul>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </Fragment>\n                        </Link>\n                    </div>\n\n\n                    <div className=\"item item3\">\n                        <FontAwesomeIcon icon={faUserAstronaut} />\n                        <span className=\"nameMenu\">shop by department</span>\n                        <div className=\"menu\">\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    data[1].map((res, j) => {\n                                        return (\n                                            <div key={j} className=\"itemMenu\">\n                                                <h4 className=\"title mb-10\">{res.title}</h4>\n                                                <ul style={{ marginBottom: 0, listStyleType: 'none' }}>\n                                                    {\n                                                        res.data.map((res2, i) => {\n                                                            return <p key={i} className=\"m-0\"><Link href=\"/aa\"><small className=\"mylink\">{res2}</small></Link></p>\n                                                        })\n                                                    }\n                                                </ul>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"item item4\">\n                        <FontAwesomeIcon icon={faBookReader} />\n                        <span className=\"nameMenu\">stories & advice</span>\n                        <div className=\"menu\">\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    data[1].map((res, j) => {\n                                        return (\n                                            <div key={j} className=\"itemMenu\">\n                                                <h4 className=\"title mb-10\">{res.title}</h4>\n                                                <ul style={{ marginBottom: 0, listStyleType: 'none' }}>\n                                                    {\n                                                        res.data.map((res2, i) => {\n                                                            return <p key={i} className=\"m-0\"><Link href=\"/aa\"><small className=\"mylink\">{res2}</small></Link></p>\n                                                        })\n                                                    }\n                                                </ul>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"item item5\">\n                        <FontAwesomeIcon icon={faGift} />\n                        <span className=\"nameMenu\">SALE</span>\n                        <div className=\"menu\">\n                            <div style={{ display: 'flex' }}>\n                                {\n                                    data[1].map((res, j) => {\n                                        return (\n                                            <div key={j} className=\"itemMenu\">\n                                                <h4 className=\"title mb-10\">{res.title}</h4>\n                                                <ul style={{ marginBottom: 0, listStyleType: 'none' }}>\n                                                    {\n                                                        res.data.map((res2, i) => {\n                                                            return <p key={i} className=\"m-0\"><Link href=\"/aa\"><small className=\"mylink\">{res2}</small></Link></p>\n                                                        })\n                                                    }\n                                                </ul>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAlBA;AACA;AAyBA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AASA;;;;AA/IA;AACA;;;;;;A","sourceRoot":""}