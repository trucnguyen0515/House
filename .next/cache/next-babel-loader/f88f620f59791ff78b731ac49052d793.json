{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/House/src/pages/products/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout1 from \"../../layouts/layout1\";\nimport { Component } from \"react\";\nimport { Row, Col, Carousel } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport \"jquery\";\nimport \"../../scss/index.scss\";\nimport \"antd/dist/antd.css\";\nimport { dataCategory } from \"../../data/data\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n\nclass ProductPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderProducts\", () => {\n      return dataCategory.map((res, i) => {\n        return __jsx(Col, {\n          span: 8,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"product\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: {\n            pathname: \"/products/[name]\",\n            query: {\n              id: res.id\n            }\n          },\n          as: `/products/${res.name}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          src: `/images/${res.url}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        })), __jsx(Link, {\n          href: {\n            pathname: \"/products/[name]\",\n            query: {\n              id: res.id\n            }\n          },\n          as: `/products/${res.name}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"title mylink\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, res.name)), __jsx(\"div\", {\n          className: \"list mt-10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, res.data.map((res2, i2) => {\n          return i2 + 1 < res.data.length ? __jsx(\"p\", {\n            key: i2,\n            className: \"mylink mb-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, res2.name) : __jsx(\"div\", {\n            key: i2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            className: \"mylink mb-5\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, res2.name), __jsx(\"p\", {\n            className: \"mylink mb-5\",\n            style: {\n              fontWeight: \"bold\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"Show All \", res.name, \" \", __jsx(FontAwesomeIcon, {\n            className: \"ml-5\",\n            icon: faChevronRight,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          })));\n        }))));\n      });\n    });\n\n    _defineProperty(this, \"renderCategories\", () => {\n      return dataCategory.map((res, i) => {\n        return __jsx(Link, {\n          key: i,\n          href: {\n            pathname: \"/products/[name]\",\n            query: {\n              id: res.id\n            }\n          },\n          as: `/products/${res.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          className: \"mylink mb-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, res.name));\n      });\n    });\n  }\n\n  render() {\n    console.log(\"render: \", this.props);\n    console.log(\"router: \", this.props);\n    const products = this.renderProducts();\n    const categories = this.renderCategories();\n    return __jsx(Layout1, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"indexProduct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Col, {\n      span: 6,\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"categories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"text-bold mb-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Categories\"), categories)), __jsx(Col, {\n      span: 18,\n      style: {\n        marginTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(Carousel, {\n      autoplay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"/images/banner1.jpg\",\n      alt: \"house1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"/images/banner2.jpg\",\n      alt: \"house1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))), products))));\n  }\n\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  return {\n    // Only `/posts/1` and `/posts/2` are generated at build time\n    paths: [{\n      params: {\n        id: 'cc'\n      }\n    }, {\n      params: {\n        id: 'cl'\n      }\n    }],\n    // Enable statically generating additional pages\n    // For example: `/posts/3`\n    fallback: true\n  };\n} // This also gets called at build time\n\nexport async function getStaticProps({\n  params\n}) {\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n  // const res = await fetch(`https://.../posts/${params.id}`)\n  // const post = await res.json()\n  console.log(\"huhu: \", params); // Pass post data to the page via props\n\n  return {\n    props: {\n      post: 'p√≥t'\n    }\n  };\n}\nexport default withRouter(ProductPage);","map":{"version":3,"sources":["/Volumes/Data/House/src/pages/products/index.js"],"names":["Layout1","Component","Row","Col","Carousel","FontAwesomeIcon","faChevronRight","dataCategory","Link","withRouter","ProductPage","map","res","i","pathname","query","id","name","url","data","res2","i2","length","fontWeight","render","console","log","props","products","renderProducts","categories","renderCategories","marginTop","getStaticPaths","paths","params","fallback","getStaticProps","post"],"mappings":"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","sourcesContent":["import Layout1 from \"../../layouts/layout1\";\nimport { Component } from \"react\";\nimport { Row, Col, Carousel } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"jquery\";\nimport \"../../scss/index.scss\";\nimport \"antd/dist/antd.css\";\nimport { dataCategory } from \"../../data/data\";\nimport Link from \"next/link\";\nimport { withRouter } from \"next/router\";\n\nclass ProductPage extends Component {\n  renderProducts = () => {\n    return dataCategory.map((res, i) => {\n      return (\n        <Col span={8} key={i}>\n          <div className=\"product\">\n            <Link\n              href={{ pathname: \"/products/[name]\", query: { id: res.id } }}\n              as={`/products/${res.name}`}\n            >\n              <img src={`/images/${res.url}`} />\n            </Link>\n            <Link\n              href={{ pathname: \"/products/[name]\", query: { id: res.id } }}\n              as={`/products/${res.name}`}\n            >\n              <span className=\"title mylink\">{res.name}</span>\n            </Link>\n            <div className=\"list mt-10\">\n              {res.data.map((res2, i2) => {\n                return i2 + 1 < res.data.length ? (\n                  <p key={i2} className=\"mylink mb-5\">\n                    {res2.name}\n                  </p>\n                ) : (\n                  <div key={i2}>\n                    <p className=\"mylink mb-5\">{res2.name}</p>\n                    <p className=\"mylink mb-5\" style={{ fontWeight: \"bold\" }}>\n                      Show All {res.name}{\" \"}\n                      <FontAwesomeIcon className=\"ml-5\" icon={faChevronRight} />\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </Col>\n      );\n    });\n  };\n  renderCategories = () => {\n    return dataCategory.map((res, i) => {\n      return (\n        <Link\n          key={i}\n          href={{ pathname: \"/products/[name]\", query: { id: res.id } }}\n          as={`/products/${res.id}`}\n        >\n          <p className=\"mylink mb-5\">{res.name}</p>\n        </Link>\n      );\n    });\n  };\n\n  render() {\n    console.log(\"render: \",this.props);\n    console.log(\"router: \",this.props)\n    const products = this.renderProducts();\n    const categories = this.renderCategories();\n\n    return (\n      <Layout1>\n        <div id=\"indexProduct\">\n          <div className=\"container\">\n            <Row>\n              <Col span={6} style={{ marginTop: \"20px\" }}>\n                <div className=\"categories\">\n                  <h3 className=\"text-bold mb-20\">Categories</h3>\n                  {categories}\n                </div>\n              </Col>\n              <Col span={18} style={{ marginTop: 0 }}>\n                <Carousel autoplay>\n                  <div className=\"img\">\n                    <img src=\"/images/banner1.jpg\" alt=\"house1\" />\n                  </div>\n                  <div className=\"img\">\n                    <img src=\"/images/banner2.jpg\" alt=\"house1\" />\n                  </div>\n                </Carousel>\n              </Col>\n              {products}\n            </Row>\n          </div>\n        </div>\n      </Layout1>\n    );\n  }\n}\n\n\n// This function gets called at build time\nexport async function getStaticPaths() {\n    return {\n      // Only `/posts/1` and `/posts/2` are generated at build time\n      paths: [{ params: { id: 'cc' } }, { params: { id: 'cl' } }],\n      // Enable statically generating additional pages\n      // For example: `/posts/3`\n      fallback: true\n    }\n  }\n  \n  // This also gets called at build time\n  export async function getStaticProps({ params }) {\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    // const res = await fetch(`https://.../posts/${params.id}`)\n    // const post = await res.json()\n    console.log(\"huhu: \",params)\n    // Pass post data to the page via props\n    return { props: { post:'p√≥t' } }\n  }\n\nexport default withRouter(ProductPage);\n"]},"metadata":{},"sourceType":"module"}