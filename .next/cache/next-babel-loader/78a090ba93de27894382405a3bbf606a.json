{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/House/src/components/Loading.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Loading = function Loading(_ref) {\n  var _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? true : _ref$isLoading,\n      children = _ref.children;\n  return isLoading ? __jsx(\"div\", {\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3\n    },\n    __self: this\n  }, \"loading...\", children) : {\n    children: children\n  };\n};\n\nexport default Loading;","map":{"version":3,"sources":["/Volumes/Data/House/src/components/Loading.js"],"names":["Loading","isLoading","children"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAiC;AAAA,4BAA/BC,SAA+B;AAAA,MAA/BA,SAA+B,+BAAnB,IAAmB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC7C,SAAOD,SAAS,GACZ;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKC,QADL,CADY,GAIZ;AAACA,IAAAA,QAAQ,EAARA;AAAD,GAJJ;AAKH,CAND;;AAQA,eAAeF,OAAf","sourcesContent":["const Loading = ({isLoading = true,children}) => {\n    return isLoading ? (\n        <div className=\"overlay\">loading...\n            {children}\n        </div>\n    ) : {children}\n}\n\nexport default Loading;"]},"metadata":{},"sourceType":"module"}