{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/House/src/components/LoadingPage.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Spin } from 'antd';\nimport { Fragment } from 'react';\n\nvar runAni = function runAni() {\n  document.querySelector(\"#__next\").style.overflow = \"hidden\";\n};\n\nvar LoadingPage = function LoadingPage(_ref) {\n  var _ref$isLoading = _ref.isLoading,\n      isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,\n      children = _ref.children;\n  return isLoading ? __jsx(\"div\", {\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"blur\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(Spin, {\n    size: \"large\",\n    className: \"iconSpinner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), children) : children;\n};\n\nexport default LoadingPage;","map":{"version":3,"sources":["/Volumes/Data/House/src/components/LoadingPage.js"],"names":["Spin","Fragment","runAni","document","querySelector","style","overflow","LoadingPage","isLoading","children"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjBC,EAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCC,KAAlC,CAAwCC,QAAxC,GAAmD,QAAnD;AACH,CAFD;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkC;AAAA,4BAAhCC,SAAgC;AAAA,MAAhCA,SAAgC,+BAApB,KAAoB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAElD,SAAOD,SAAS,GACZ;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKC,QAHL,CADY,GAMZA,QANJ;AAOH,CATD;;AAWA,eAAeF,WAAf","sourcesContent":["import { Spin } from 'antd';\nimport { Fragment } from 'react';\n\nconst runAni = () => {\n    document.querySelector(\"#__next\").style.overflow = \"hidden\"\n}\n\n\nconst LoadingPage = ({isLoading = false,children}) => {\n\n    return isLoading ? (\n        <div className=\"overlay\">\n            <div className=\"blur\"></div>\n            <Spin size=\"large\" className=\"iconSpinner\"/>\n            {children}\n        </div>\n    ) : children\n}\n\nexport default LoadingPage;"]},"metadata":{},"sourceType":"module"}